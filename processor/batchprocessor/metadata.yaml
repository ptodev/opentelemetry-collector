type: batch
github_project: open-telemetry/opentelemetry-collector

status:
  disable_codecov_badge: true
  class: processor
  stability:
    beta: [ traces, metrics, logs ]
  distributions: [ core, contrib, k8s ]

tests:

telemetry:
  metrics:
    processor_batch_batch_size_trigger_send:
      enabled: true
      description: Number of times the batch was sent due to a size trigger
      unit: "{times}"
      sum:
        value_type: int
        monotonic: true
    processor_batch_timeout_trigger_send:
      enabled: true
      description: Number of times the batch was sent due to a timeout trigger
      unit: "{times}"
      sum:
        value_type: int
        monotonic: true
    processor_batch_batch_send_size:
      enabled: true
      description: Number of units in the batch
      unit: "{units}"
      histogram:
        value_type: int
        bucket_boundaries: [ 10, 25, 50, 75, 100, 250, 500, 750, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000, 20000, 30000, 50000, 100000 ]
    processor_batch_batch_send_size_bytes:
      enabled: true
      description: Number of bytes in batch that was sent. Only available on detailed level.
      unit: By
      histogram:
        value_type: int
        bucket_boundaries: [ 10, 25, 50, 75, 100, 250, 500, 750, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000, 20000, 30000, 50000, 100_000, 200_000, 300_000, 400_000, 500_000, 600_000, 700_000, 800_000, 900_000, 1000_000, 2000_000, 3000_000, 4000_000, 5000_000, 6000_000, 7000_000, 8000_000, 9000_000 ]
    processor_batch_metadata_cardinality:
      enabled: true
      description: Number of distinct metadata value combinations being processed
      unit: "{combinations}"
      sum:
        value_type: int
        async: true

config:
  type: object
  additionalProperties: false
  description: "Configuration parameters for the batch processor."
  properties:
    timeout:
      description: >-
        Timeout sets the time after which a batch will be sent regardless of size.
        When this is set to zero, batched data will be sent immediately.
      type: string
      format: duration
      default: "PT0.2S"
    send_batch_size:
      description: >-
        SendBatchSize is the size of a batch which after hit, will trigger it to be sent.
        When this is set to zero, the batch size is ignored and data will be sent immediately
        subject to only send_batch_max_size.
      type: integer
      minimum: 0
      default: 8192
      goJSONSchema:
        type: uint32
    send_batch_max_size:
      description: >-
        SendBatchMaxSize is the maximum size of a batch. It must be larger than SendBatchSize.
        Larger batches are split into smaller units.
        Default value is 0, that means no maximum size.
      type: integer
      default: 0
      minimum: 0
      goJSONSchema:
        type: uint32
    metadata_keys:
      description: >-
        MetadataKeys is a list of client.Metadata keys that will be
        used to form distinct batchers.  If this setting is empty,
        a single batcher instance will be used.  When this setting
        is not empty, one batcher will be used per distinct
        combination of values for the listed metadata keys.
        

        Empty value and unset metadata are treated as distinct cases.
        

        Entries are case-insensitive.  Duplicated entries will
        trigger a validation error.
      type: array
      items:
        type: string
    metadata_cardinality_limit:
      description: >-
        MetadataCardinalityLimit indicates the maximum number of
        batcher instances that will be created through a distinct
        combination of MetadataKeys.
      type: integer
      default: 1000
      minimum: 0
      goJSONSchema:
        type: uint32
    _:
      description: >-
        Prevent unkeyed literal initialization.
      type: integer
      goJSONSchema:
        identifier: _
        type: struct{}
        nillable: true
    auth:
      type: object
      goJSONSchema:
        type: configoptional.Optional[configauth.Config]
        nillable: true
        imports:
        - go.opentelemetry.io/collector/config/configoptional
        - go.opentelemetry.io/collector/config/configauth